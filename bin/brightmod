#!/bin/sh
#
# @grufwub
# PLATFORM: DESKTOP
# though could be used with any ¯\_(ツ)_/¯
#
# Hacky workaround for xbacklight not working :p

BRIGHTDIR='/sys/class/backlight/intel_backlight'
BRIGHTFILE="$BRIGHTDIR/brightness"
MAXBRIGHT=0

usage() {
    echo 'Usage: brightmod <show|up|down|set> <val>'
}

checked_read() {
    local val=$(cat "$1") > /dev/null 2>&1
    if [ $? -ne 0 ]; then
        echo "Unable to read from: $1"
        return 1
    else
        echo "$val"
        return 0
    fi
}

checked_write() {
    if ! (echo "$2" > "$1") > /dev/null 2>&1; then
        echo "Unable to write to: $1"
        return 1
    else
        return 0
    fi
}

inc_brightness() {
    local cur new

    cur=$(checked_read "$BRIGHTFILE")
    [ $? -ne 0 ] && return 1

    let new=$cur+$1
    if [ $new -gt $MAXBRIGHT ]; then
        new=$MAXBRIGHT
    fi

    checked_write "$BRIGHTFILE" "$new"
    return $?
}

dec_brightness() {
    local cur new

    cur=$(cat "$BRIGHTFILE")
    let new=$cur-$1
    if [ $new -lt 0 ]; then
        new=0
    fi

    checked_write "$BRIGHTFILE" "$new"
    return $?
}

show_brightness() {
    local cur=$(checked_read "$BRIGHTFILE")
    [ $? -ne 0 ] && return $?
    echo "$cur / $MAXBRIGHT"
    return 0
}

main() {
    MAXBRIGHT=$(checked_read "$BRIGHTDIR/max_brightness")
    [ $? -ne 0 ] && exit 1

    case "$1" in
        'set')
            if [ -z "$2" ]; then
                usage
                exit 1
            elif [ $2 -gt $MAXBRIGHT ]; then
                echo "$2 is higher than max. brightness ($MAXBRIGHT)"
                exit 1
            else
                checked_write "$BRIGHTFILE" "$2"
                exit $?
            fi
            ;;

        'show')
            show_brightness
            exit $?
            ;;

        'up')
            inc_brightness 50
            exit $?
            ;;

        'down')
            dec_brightness 50
            exit $?
            ;;

        *)
            usage
            exit 0
    esac
}

main "$@"